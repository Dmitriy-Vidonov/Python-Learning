# const.py

from collections import namedtuple

Constants = namedtuple('Constants', ['path'])
const = Constants('C:/Users/vidonov/Desktop/Dev/Coding files/Working_with_files/')


# *******************


# files_dirs_list.py

import os.path
from const import const # подключаем константу с путем до рабочей папки, в которой
                        # расположена данная функция

def files_dirs_list(WORK_DIR): # WORK_DIR - название рабочей папки

    files_massiv = []
    dirs_massiv = []
    try:
        for path, dirs, files in os.walk(const.path + WORK_DIR + '/'):
            if dirs != []:
                for name in dirs:
                    dirs_massiv.append(os.path.join(path, name)) # формируем список подкаталогов

            if files != []:
                for name in files:
                    files_massiv.append(os.path.join(path, name)) # формируем список файлов
        
        return dirs_massiv, files_massiv
    
    except Exception as ex:
        print('Сбор в работе функции files_dirs_list - ' + str(ex))
        return None

# print(files_dirs_list('dir_for_remove'))


# *******************


# remove_dir.py

from const import const # подключение константы с путем до рабочей папке, в которой лежит данная ф-ия
import os.path
from files_dirs_list import files_dirs_list # подключение функции, возвращающей список папок и файлов

def remove_dir(WORK_DIR): # WORK_DIR - имя папки на удаление
  
    sub_dirs_flag = True # флаг для проверки суб-директорий
    count = 0

    massiv_dirs, massiv_files = files_dirs_list(WORK_DIR) # заносим в массив данные функции files_dirs_list()
    try:
        for path, dirs, files in os.walk(const.path + WORK_DIR + '/'):
            if dirs != []: # проверяем наличие суб-директорий     
                sub_dirs_flag = False
    except Exception as ex:
        print('Ошибка в цикле функции remove_dir() - ' + str(ex))
        return None

    try:      
        if files != []:
            for name in files: 
                count += 1 # подсчитываем число файлов
        
        if sub_dirs_flag == True: # если подкаталогов нет, удаляем файлы
            for i in range(count):
                if os.path.isfile(massiv_files[i]):
                    os.remove(massiv_files[i]) # удаляем файлы по списку из массива
            os.rmdir(WORK_DIR) # удаляем уже пустую папку без файлов внутри
        else:
            print('Нельзя удалить - есть подкаталоги')

        return

    except Exception as ex:
        print('Ошибка при проверке условий функции remove_dir() - ' + str(ex))
        return None


# remove_dir('remove_dir')
